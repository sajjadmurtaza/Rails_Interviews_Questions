# Rails Interview Questions

I get a fair number of questions via [Hacker Hours](http://hackerhours.org) and elsewhere regarding what questions to use/expect in an interview for a Rails developer, so figured I would get it together in a tidy list.  Pull requests welcome.

## Tips

### Interviewers

* Personalize your list of questions.
* Don't ask questions you don't know the answers to.
* Mix trivia questions with open-ended ones.

### Interviewees

* Don't study to the test.  Not all of these questions will be used, and others will be asked that aren't covered here.  Know your stuff.
* Rails skills != CS skills
* Know whether you are interviewing for a full-stack vs. backend-focused position.
* Have code up on Github/Bitbucket/wherever - the more side projects you have to talk about, the better.
* Be comfortable with *some* version control system.
* Community awareness and resourcefulness can be as important as technical knowledge.

## The Questions

### General

* What is a tree?  What is a DAG?
* Pseudo-code depth-first and breadth-first search.
* Given a sorted array, what is the fastest way to find a element?  What is the Big-O time to do so?
* Explain how ajax works, hitting all parts of the stack. ([@abestanway](https://twitter.com/abestanway/status/278967644705677312))

### Ruby

* What is the difference between a lambda, a block and a proc? [I have gotten this one at every Ruby interview I've been in]
* How do you sort an Array of objects by a particular attribute?  What is a better way to do sorting with ActiveRecord?
* What are some of your favorite gems?  What are their alternatives?
* In Ruby, which is generally the better option: a recursive function or an iterative one?
* What are `#method_missing` and `#send`?  Why are they useful?
* What are the various Ruby runtimes, and how are they different?
* Define "Matz".

### Rails

* What is the general history of Rails?
* What is new in Rails 4?
* Explain the different pieces of Rails.
* Walk through the flow of a request through Rails.
* What are the different server options for running a Rails/Rack app?
* Explain CSRF and how Rails combats it.
* Explain mass-assignment vulnerability.
* Define "DHH".
* Define "tenderlove".
* Why do some people say "Rails can't scale"?
* What is Rack?
* What is middleware? How does it compare to controller filters/actions?
* Explain various forms of caching available in Rails.
* What are some Ruby web server options?
* On a scale of [@gorbypuff](https://twitter.com/gorbypuff) (0) to [@tenderlove](https://twitter.com/tenderlove) (10), how would you rate your Rails proficiency? 

## Other Questions

##### Why we need Asset Pipeline in rails.?  
[1](http://guides.rubyonrails.org/asset_pipeline.html) -- [2](http://coderberry.me/blog/2012/04/24/asset-pipeline-for-dummies/) -- [3*](http://stackoverflow.com/questions/14719788/how-can-i-determine-the-md5-digest-of-a-given-asset-in-the-rails-asset-pipeline)  

#####  Include and join ?  
[include(EAGER LOADING) -- join(LAZY LOADING)]  
[1](http://tomdallimore.com/blog/includes-vs-joins-in-rails-when-and-where/) -- [2](http://blog.bigbinary.com/2013/07/01/preload-vs-eager-load-vs-joins-vs-includes.html)  --  [3](http://railscasts.com/episodes/181-include-vs-joins)  

#####  Proc and lambda?  
[1](http://awaxman11.github.io/blog/2013/08/05/what-is-the-difference-between-a-block/) -- [2*](http://stackoverflow.com/questions/626/when-to-use-lambda-when-to-use-proc-new) -- [3](http://techspry.com/ruby_and_rails/proc-and-lambda-in-ruby/)  

#####  Inheritence Questions?  
[1](http://stackoverflow.com/questions/9359948/multiple-inheritance-whats-a-good-example) -- [2](http://beginnersbook.com/2013/05/java-inheritance-types/) -- [3](http://www.dotnet-tricks.com/Tutorial/oops/JaIO211013-Understanding-Inheritance-and-Different-Types-of-Inheritance.html)

#####  Multiple table inheritence.?  
[1](http://techspry.com/ruby_and_rails/multiple-table-inheritance-in-rails-3/)

#####  Multiple Inheritence in rails.  
[1](http://www.nishantnigam.in/2012/01/simulating-multiple-inheritance-with.html) -- [2](http://stackoverflow.com/questions/1282864/ruby-inheritance-vs-mixins) -- [3**](http://tutorials.jumpstartlab.com/topics/models/modules.html) -- [In object-oriented programming languages, a mixin is a class that contains a combination of methods from other classes.](https://railskey.wordpress.com/2013/02/07/multiple-inheritance-ruby/)  

#####  If you have 3 objects(Extend)  
obj1  
obj2  
obj3  
you want "test" method only for obje3  
obj3.extend Abc  
obj3.test  
[answer](http://saturnflyer.com/blog/jim/2011/09/28/4-simple-steps-extending-ruby-objects-the-tip-of-the-iceberg-with-dci/)  
[1](https://www.digitalocean.com/community/tutorials/sqlite-vs-mysql-vs-postgresql-a-comparison-of-relational-database-management-systems)  --[2](http://www.railstips.org/blog/archives/2009/05/15/include-vs-extend-in-ruby/)  

#####  CarrierWave vs. Paperclip vs. Dragonfly comparison  
[1](http://bcjordan.com/posts/rails-image-uploading-framework-comparison/) -- [carrierwave is more flexible, complex image processing](http://praaveenvr.blogspot.fr/2014/03/compare-carrierwave-paperclip-and.html)  

##### Observer  
* Observer are not in rails 4
[1*](http://codebrahma.com/ruby/2014/07/30/observers-in-rails.html) -- [2](http://samuelmullen.com/2013/05/the-problem-with-rails-callbacks/) -- [3](http://stackoverflow.com/questions/15165260/rails-observer-alternatives-for-4-0)  -- [4](http://ablogaboutcode.com/2011/10/24/using-rails-observers-to-write-faster-tests-and-simpler-models/)  

##### rails before_action and before_filter
[1*](http://stackoverflow.com/questions/16519828/rails-4-before-filter-vs-before-action) -- [2](http://stackoverflow.com/questions/20811029/difference-between-actions-and-filters-in-rails) -- [3](https://twitter.com/rails/status/277121523649740800)  

##### class vs module
[1](http://stackoverflow.com/questions/151505/difference-between-a-class-and-a-module) 

##### Try
[1](http://apidock.com/rails/Object/try)

##### Save Something after_save callback
[1](http://stackoverflow.com/questions/5777172/rails-how-to-update-a-column-after-saving) -- [If you have to change any value, always try before_save](http://stackoverflow.com/questions/12835029/how-does-after-save-work-when-saving-an-object)

##### Initialization
[1](http://www.zlu.me/rails/ruby/2013/05/29/initialization-is-an-interesting-thing.html)

##### Ruby on Rails Dup vs Clone
[1](http://www.jvanbaarsen.com/blog/2014/07/01/ruby-on-rails-dup-vs-clone) -- [2](https://coderwall.com/p/1zflyg/ruby-the-differences-between-dup-clone) -- [3*](http://sachinchoudhary.blogspot.com/2014/01/ruby-clone-dup-vs-rails-deepdup.html)

#####  SQLite vs MySQL vs PostgreSQL: A Comparison Of Relational Database Management Systems  

------------ 
[Rails Hot Topic](http://techspry.com/ruby_and_rails)


------------  

##### Search File
* [locate filename](http://www.howtogeek.com/112674/how-to-find-files-and-folders-in-linux-using-the-command-line/)  
